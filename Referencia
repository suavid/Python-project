# !IMPORTANTE: ESTE ARCHIVO ES MODIFICABLE, NO SE PERMITE BORRAR PARTES DE EL, SOLO AGREGAR, 
# A PESAR QUE ALGUNA FUNCION SEA REMOVIDA POR MOTIVOS DIDACTICOS ES PREFERIBLE QUE LO YA
# AGREGADO SE MANTENGA

# Agrego partes importantes del codigo que se van utilizando en el programa para que sea mas facil que 
# puedan seguir colaborando con el desarrollo de este proyecto y les sea mas facil entender el codigo.

# 1-) Metodo main() es el que inicializa los eventos de las ventanas, atravez del objeto gtk
#     hacemos la llamada a gtk.main()

	def main(self):
		gtk.main()

# Esto da por finalizado el metodo que activa los eventos de la ventana 

# 2-) Otra parte importante del codigo es la creacion del objeto, la instancia de la clase ventana
#     con un if se verifica que el programa sea ejecutado de manera correcta por el interprete python
#     si esto se cumple se crea el objeto y se invoca al metodo main() de la clase ventana. Referenciar 
#     al codigo para mayor comprension  

	if __name__=="__main__":
		mainFrame = ventana()
		mainFrame.main()

# 3-) Esta es una funcion miembro de la clase, es llamada al hacer click en el boton cerrar de la ventana
#     si develve True la ventana no se cierra, si devuelve False llamara al evento destroy para cerrar la ventana

	def delete(self, widget, data = None):
			return False

# 4-) Esta es la funcion llamada por el evento destroy que cierra definitivamente la ventana, contrario a 
      main()

	def close(self, widget, data = None):
		gtk.main_quit()
 
# 5-) Por el momento aqui se mantienen las funciones principales del programa, respetar la sintaxis
	
	def __init__(self):

# 6-) se crea un varible llamada window, (El nombre es arbitrario), esta almacenara una referencia a la ventana
      por medio de gtk se crea la ventana nueva, WINDOW_TOPLEVEL indica que los contronos ser√°n manejados por el 
      gestor de ventanas del OS
	
	self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
